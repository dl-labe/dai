"#!/usr/bin/env python
# coding: utf-8

# In[ ]:


def print_square(square):
    for row in square:
        for num in row:
            print(num, end='\t')
        print()

def is_magic_square(square):
    target_sum = sum(square[0])
    
    for row in square:
        if sum(row) != target_sum:
            return False

    for i in range(3):
        if square[0][i] + square[1][i] + square[2][i] != target_sum:
            return False

    if square[0][0] + square[1][1] + square[2][2] != target_sum:
        return False
    if square[0][2] + square[1][1] + square[2][0] != target_sum:
        return False
    return True

def play_game():
    print(""Welcome to the 3x3 magic square game!"")
    print(""Please enter the numbers 1-9 to fill in the squares."")
    print(""The goal is to make the rows, columns, and diagonals add up to the same number."")
    print()
    
    square = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
    
    while True:
        print_square(square)
        print()

        move = input(""Enter a number (1-9) and the row and column where you want to place it (e.g. '5 2 1'): "")
        try:
            num, row, col = map(int, move.split())
            if num < 1 or num > 9:
                raise ValueError(""Number must be between 1 and 9."")
            if row < 1 or row > 3 or col < 1 or col > 3:
                raise ValueError(""Row and column must be between 1 and 3."")
        except ValueError as e:
            print(f""Invalid move: {e}"")
            continue

        square[row-1][col-1] = num

        if is_magic_square(square):
            print_square(square)
            print(""Congratulations! You've completed the magic square!"")
            break

if __name__ == '__main__':
    play_game()


# In[ ]:




"
