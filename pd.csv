"#!/usr/bin/env python
# coding: utf-8

# In[1]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.feature_selection import SelectKBest, f_classif
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix


# In[2]:


df = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/parkinsons/parkinsons.data')
df


# In[3]:


X = df.drop(['name', 'status'], axis=1)


# In[4]:


y = df['status']


# In[5]:


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


# In[6]:


scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


# In[7]:


selector = SelectKBest(f_classif, k=10)
X_train = selector.fit_transform(X_train, y_train)
X_test = selector.transform(X_test)


# # SVM

# In[8]:


model_svm = SVC(kernel='linear', C=1.0)
model_svm.fit(X_train, y_train)


# In[9]:


y_pred = model_svm.predict(X_test)


# In[10]:


accuracy = accuracy_score(y_test, y_pred)
print(""Accuracy:"", accuracy)
print(classification_report(y_test, y_pred))


# # KNN

# In[11]:


model_knn = KNeighborsClassifier(n_neighbors=5)
model_knn.fit(X_train, y_train)


# In[12]:


y_pred = model_knn.predict(X_test)


# In[13]:


accuracy = accuracy_score(y_test, y_pred)
print(""Accuracy:"", accuracy)
print(classification_report(y_test, y_pred))


# # LR

# In[14]:


model_lr = LogisticRegression()
model_lr.fit(X_train, y_train)


# In[15]:


y_pred = model_lr.predict(X_test)


# In[16]:


accuracy = accuracy_score(y_test, y_pred)
print(""Accuracy:"", accuracy)
print(classification_report(y_test, y_pred))


# In[ ]:




"
